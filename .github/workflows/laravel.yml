name: Laravel

on:
  pull_request

jobs:
  devserver:
    runs-on: ubuntu-latest
    services:
      # mysql-service Label used to access the service container
      mysql-service:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          ## Accessing to Github secrets, where you can store your configuration
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: db_test
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '7.4'
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Copy .env.github
      run: cp .env.github .env
    - name: Install Dependencies`
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run:  mysql -h 127.0.0.1 --port 33306 -u root -ppassword -e 'CREATE DATABASE IF NOT EXISTS db_test;'
    - name: Get branch names
      id: branch-name
      uses: tj-actions/branch-names@v4.8
    - name: Code Quality
      run:  composer global require "squizlabs/php_codesniffer=*" && phpcs -w -n --standard=./phpcs.xml $(git diff --name-only --diff-filter=AM origin/master)
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: db_test
        DB_PORT: 33306
        DB_USER: root
        DB_PASSWORD: password
        DB_HOST: 127.0.0.1
      run: |
        php artisan migrate
        php artisan db:seed
        vendor/bin/phpunit
    - name: Get Head Ref branch name (i.e The current pull request branch)
      run: |
        echo "${{ steps.branch-name.outputs.head_ref_branch }}"
    - name: Deploy to Devserver
      env:
        PUSHED_BRANCH_NAME: ${{ steps.branch-name.outputs.head_ref_branch }}
      uses: appleboy/ssh-action@master
      with:
        username: ${{ secrets.LEADGEN_DEVSERVER_SSH_USER }}
        host: ${{secrets.LEADGEN_DEVSERVER_HOST}}
        envs: PUSHED_BRANCH_NAME
        password: ${{ secrets.LEADGEN_DEVSERVER_SSH_PASS }}
        script: sudo /home/aqib/.server_deploy.sh $PUSHED_BRANCH_NAME
